/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as MonitorsImport } from './routes/monitors'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as MonitorIdImport } from './routes/monitor.$id'
import { Route as MonitorIdIndexImport } from './routes/monitor.$id/index'
import { Route as MonitorIdSettingsImport } from './routes/monitor.$id/settings'
import { Route as MonitorIdLogsImport } from './routes/monitor.$id/logs'
import { Route as MonitorIdSettingsGeneralImport } from './routes/monitor.$id/settings/general'
import { Route as MonitorIdSettingsAuthenticationImport } from './routes/monitor.$id/settings/authentication'
import { Route as MonitorIdSettingsAdvancedImport } from './routes/monitor.$id/settings/advanced'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const MonitorsRoute = MonitorsImport.update({
  path: '/monitors',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MonitorIdRoute = MonitorIdImport.update({
  path: '/monitor/$id',
  getParentRoute: () => rootRoute,
} as any)

const MonitorIdIndexRoute = MonitorIdIndexImport.update({
  path: '/',
  getParentRoute: () => MonitorIdRoute,
} as any)

const MonitorIdSettingsRoute = MonitorIdSettingsImport.update({
  path: '/settings',
  getParentRoute: () => MonitorIdRoute,
} as any)

const MonitorIdLogsRoute = MonitorIdLogsImport.update({
  path: '/logs',
  getParentRoute: () => MonitorIdRoute,
} as any)

const MonitorIdSettingsGeneralRoute = MonitorIdSettingsGeneralImport.update({
  path: '/general',
  getParentRoute: () => MonitorIdSettingsRoute,
} as any)

const MonitorIdSettingsAuthenticationRoute =
  MonitorIdSettingsAuthenticationImport.update({
    path: '/authentication',
    getParentRoute: () => MonitorIdSettingsRoute,
  } as any)

const MonitorIdSettingsAdvancedRoute = MonitorIdSettingsAdvancedImport.update({
  path: '/advanced',
  getParentRoute: () => MonitorIdSettingsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/monitors': {
      id: '/monitors'
      path: '/monitors'
      fullPath: '/monitors'
      preLoaderRoute: typeof MonitorsImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/monitor/$id': {
      id: '/monitor/$id'
      path: '/monitor/$id'
      fullPath: '/monitor/$id'
      preLoaderRoute: typeof MonitorIdImport
      parentRoute: typeof rootRoute
    }
    '/monitor/$id/logs': {
      id: '/monitor/$id/logs'
      path: '/logs'
      fullPath: '/monitor/$id/logs'
      preLoaderRoute: typeof MonitorIdLogsImport
      parentRoute: typeof MonitorIdImport
    }
    '/monitor/$id/settings': {
      id: '/monitor/$id/settings'
      path: '/settings'
      fullPath: '/monitor/$id/settings'
      preLoaderRoute: typeof MonitorIdSettingsImport
      parentRoute: typeof MonitorIdImport
    }
    '/monitor/$id/': {
      id: '/monitor/$id/'
      path: '/'
      fullPath: '/monitor/$id/'
      preLoaderRoute: typeof MonitorIdIndexImport
      parentRoute: typeof MonitorIdImport
    }
    '/monitor/$id/settings/advanced': {
      id: '/monitor/$id/settings/advanced'
      path: '/advanced'
      fullPath: '/monitor/$id/settings/advanced'
      preLoaderRoute: typeof MonitorIdSettingsAdvancedImport
      parentRoute: typeof MonitorIdSettingsImport
    }
    '/monitor/$id/settings/authentication': {
      id: '/monitor/$id/settings/authentication'
      path: '/authentication'
      fullPath: '/monitor/$id/settings/authentication'
      preLoaderRoute: typeof MonitorIdSettingsAuthenticationImport
      parentRoute: typeof MonitorIdSettingsImport
    }
    '/monitor/$id/settings/general': {
      id: '/monitor/$id/settings/general'
      path: '/general'
      fullPath: '/monitor/$id/settings/general'
      preLoaderRoute: typeof MonitorIdSettingsGeneralImport
      parentRoute: typeof MonitorIdSettingsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  LoginRoute,
  MonitorsRoute,
  RegisterRoute,
  MonitorIdRoute: MonitorIdRoute.addChildren({
    MonitorIdLogsRoute,
    MonitorIdSettingsRoute: MonitorIdSettingsRoute.addChildren({
      MonitorIdSettingsAdvancedRoute,
      MonitorIdSettingsAuthenticationRoute,
      MonitorIdSettingsGeneralRoute,
    }),
    MonitorIdIndexRoute,
  }),
})

/* prettier-ignore-end */
